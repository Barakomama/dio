<% layout('../layout') -%>

<style type="text/css">
  html { height: 100% }
  body { height: 100%; margin: 0; padding: 0 }
  #map-canvas { 
  	height: 740px;
  	width: 100%;
  }
</style>
<script type="text/javascript"
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAWOlwKkkrv_9ZfMcySRcsNQeKGACHpEA4&sensor=true&libraries=visualization">
</script>
<script type="text/javascript">
// Set to global
var map;
var markers = [];
var heatmap;
var pointData = [];
var infoWindow = null;

  function initialize() {
    
    var latLng = new google.maps.LatLng(14.559, 121.017);

    var mapOptions = {
        center: latLng,
        zoom: 9,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        panControl: true,
        zoomControl: true,          
        streetViewControl: false
    };
    
    map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
    
    // GEO Location
    // Try HTML5 geolocation
    if(navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = new google.maps.LatLng(position.coords.latitude,
                                         position.coords.longitude);

        map.setCenter(pos);
      }, function() {
        handleNoGeolocation(true);
      });
    } else {
      // Browser doesn't support Geolocation
      handleNoGeolocation(false);
    }

    // Add points using user events

      loadUserEvents();


    //addMapPoint(map);

    // Place a draggable marker on the map
    var markerDragon = new google.maps.Marker({
        position: latLng,
        map: map,
        animation: google.maps.Animation.DROP,
        draggable:true,
    });
    
     google.maps.event.addListener(markerDragon, 'dragend', toggleBounce);
     
     function toggleBounce() {
        if (infoWindow) {
            infoWindow.close();
        }
        // Creating a global infoWindow object that will be reused by all markers
        infoWindow = new google.maps.InfoWindow();
        
         var content = '<div id="infoWindow">' +
            '<h2> Do you want to report a disaster?</h2>' + 
            '<div class="pull-right" style="margin-top: 15px;"><a href="#" id= "report_button" class="btn" data-toggle="modal" data-target="#report">REPORT</a>' +
            '<a href="#" id= "cancel_button" class="btn" onclick = "infoWindow.close()">CLOSE' +
            '</a></div>';
        infoWindow.setContent(content);
        infoWindow.open(map,markerDragon);
        infoWindow.close;
         
        if (markerDragon.getAnimation() != null) {
            markerDragon.setAnimation(null);
        } else {
            markerDragon.setAnimation(google.maps.Animation.DROP);
        }

          var lat = markerDragon.getPosition().lat();
          var lng = markerDragon.getPosition().lng();

          $("#reportLat").val(lat);
          $("#reportLng").val(lng);
    }

 }
 
 function handleNoGeolocation(errorFlag) {
  if (errorFlag) {
    var content = 'Error: The Geolocation service failed.';
  } else {
    var content = 'Error: Your browser doesn\'t support geolocation.';
  }

  var latLng = new google.maps.LatLng(14.559, 121.019);
  map.setCenter(latLng);
}   
 
 google.maps.event.addDomListener(window, 'load', initialize);

 function loadUserEvents () {
   $.ajax({
      url: "/api/user_events",
      dataType: "json",
      data: {dateFrom: $("#dateFrom").val(), dateTo: $("#dateTo").val(), "event": $("#disaster").val()},
      success: function(jsonData){
        if(jsonData.code == 1){
          var userEvents = jsonData.data;
          pointData = [];
          userEvents.forEach(function(userEvent) {
            addMapPoint(userEvent)
          });

          populateHeatMap();

        } else {
          alert(jsonData.message);
        }
      }
   });
 }

function populateHeatMap(){
  var pointArray = new google.maps.MVCArray(pointData);
  heatmap = new google.maps.visualization.HeatmapLayer({
      data: pointArray
    });
}

    
  function addMapPoint(userEvent) {

    var latLng = new google.maps.LatLng(userEvent.latitude, userEvent.longitude);
    
    pointData.push(latLng);

    //TODO: create a template for this
    var content = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<h4 style="font-size: 16px;margin-bottom: 5px;">'+ userEvent.title +'</h4>'+
      '<p style="font-style: italic;font-weight: 400;font-size: 10px;">'+ userEvent.created +'</p>'+
      '<div id="bodyContent">'+
      '<ul><li><b>Hazard/Disaster Type: </b>' + userEvent.event+
      '<li><b>Description: </b>'+ userEvent.description +
      '</li></div>'+
      '</div>';
      
    var infowindow = new google.maps.InfoWindow({
      content: content
    });
    
    var marker = new google.maps.Marker({
        position: latLng,
        map: map,
        icon: 'public/images/disasters/'+ getIconByIdEvent(userEvent.eventId),
     });
     
    markers.push(marker);

     google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map,marker);
      });
  }

  function getIconByIdEvent(id) {
    var icon = "";
    switch(id){
      case 1: icon = "earthquake.png";
        break;
       case 2: icon = "flood.png";
        break;
       case 3: icon = "rainfall.png";
        break;
      default: icon = "flood.png";
    }
    return icon;
  }

//
function changeLayerDisplay() {
  // alert($("#mapLayer").val())
  switch($("#mapLayer").val()) {
    case 'heatmap':
        clearMarkers();
        showHeatMap();
      break
    case 'marker':
    default:
      hideHeatMap();
      showMarkers();
  }
}

// Sets the map on all markers in the array.
function setAllMap(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
  setAllMap(null);
}

// Shows any markers currently in the array.
function showMarkers() {
  setAllMap(map);
}

// Deletes all markers in the array by removing references to them.
function deleteMarkers() {
  clearMarkers();
  markers = [];
}

function showHeatMap(){
  heatmap.setMap(map);
}

function hideHeatMap(){
  heatmap.setMap(null);
}


</script>

<!-- Modal -->
<div class="modal fade" id="report" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="myModalLabel">Report A Disaster</h4>
      </div>
      <div class="modal-body">
         <form action="" method="post">
            
             <div class="form-group">
                  <label for="type" class="col-md-3">
                  Disaster Type:
                  </label>
                  <div class="col-md-9">
                    <select>
                      <option value="1">Seismologic</option>
                      <option value="2">Volcanic</option>
                      <option value="3">Weather</option>
                      <option value="4">Climate</option>
                    </select>
                  </div>
            </div>
            
            <div class="form-group">
                  <label for="disaster-desc" class="col-md-3">
                  Disaster Description:
                  </label>
                  <div class="col-md-9">
                    <textarea id="message_area" rows="4" cols="60" name=""></textarea>
                  </div>    
            </div>
            <input type="hidden" name="reportLat" class="form-control" id="reportLat" />
            <input type="hidden" name="reportLng" class="form-control" id="reportLng" />
        </form> 
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Submit Report</button>
      </div>
    </div>
  </div>
</div>

<div id="map-canvas"/>

